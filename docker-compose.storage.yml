version: '3.5'
services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    ports:
    - 3306:3306
    environment:
    - MYSQL_DATABASE=application
    - MYSQL_ROOT_PASSWORD=root
    - LANG=C.UTF-8
    volumes:
    - ./script/docker-mysql/:/etc/mysql/conf.d

  redis:
    image: redis:5
    container_name: redis
    restart: always
    command: redis-server --requirepass credential
    ports:
    - 6379:6379

  zookeeper1:
    image: zookeeper:3.4.13
    container_name: zookeeper1
    hostname: zookeeper1
    ports:
    - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper1:2888:3888
    volumes:
    - ./docker-volumes/zookeeper1/data:/data
    - ./docker-volumes/zookeeper1/datalog:/datalog

  # ref - https://github.com/simplesteph/kafka-stack-docker-compose/blob/master/full-stack.yml
  kafka-broker1:
    image: confluentinc/cp-kafka:5.0.0
    container_name: kafka-broker1
    hostname: kafka-broker1
    ports:
    - "9092:9092"
    environment:
      # ref - https://rmoff.net/2018/08/02/kafka-listeners-explained/
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-broker1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL


      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_BROKER_ID: 1

      # ref - https://github.com/confluentinc/cp-docker-images/blob/master/debian/kafka/include/etc/confluent/docker/log4j.properties.template
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 2
    volumes:
    - ./docker-volumes/kafka-broker1/data:/var/lib/kafka/data
    depends_on:
    - zookeeper1

#  kafka-schema-registry:
#    image: confluentinc/cp-schema-registry:5.0.0
#    container_name: kafka-schema-registry
#    hostname: kafka-schema-registry
#    ports:
#    - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker1:19092
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper1:2181'
#      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
#      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#    depends_on:
#    - zookeeper1
#    - kafka-broker1
#
#  kafka-rest-proxy:
#    image: confluentinc/cp-kafka-rest:5.0.0
#    container_name: kafka-rest-proxy
#    hostname: kafka-rest-proxy
#    ports:
#    - "8082:8082"
#    environment:
#      # KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper1:2181
#      KAFKA_REST_HOST_NAME: kafka-rest-proxy
#      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
#      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
#      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker1:19092
#    depends_on:
#    - zookeeper1
#    - kafka-broker1
#    - kafka-schema-registry

