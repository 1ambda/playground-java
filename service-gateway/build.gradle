buildscript {
    ext {
        // springBootVersion = '2.1.0.RC1'
        springBootVersion = '2.0.6.RELEASE'
        gradleAptVersion = '0.18'
        owaspVersion = '3.3.1'
        queryDslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            // for apt plugins
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            // for spring boot snapshot version
            name "jboss"
            url "http://repository.jboss.org/nexus/content/groups/public/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("net.ltgt.gradle:gradle-apt-plugin:${gradleAptVersion}")
        classpath("org.owasp:dependency-check-gradle:${owaspVersion}")
    }
}

// framework, IDE
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//// code generation
//apply plugin: 'net.ltgt.apt'
//apply plugin: 'net.ltgt.apt-idea'

// check
apply plugin: 'org.owasp.dependencycheck'

group = 'com.github.lambda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    guavaVersion = '26.0-jre'
    springBootAdminVersion = '2.0.3'
    micrometerVersion = '1.0.6'
    springfoxVersion = '2.9.2'
    logbookVersion = '1.9.1'

    mysqlConnectorVersion = '5.1.47'

    // test
    testcontainersVersion = '1.9.1'
    feignVersion = '9.4.0'
    feignFormVersion = '2.1.0'
    oltuVersion = '1.0.1'
    migbase64Version = '2.2'

    // code generation related
    lombokVersion = "1.18.2"
    queryDslVersion = '4.2.1'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-websocket')

    compile('org.springframework.retry:spring-retry')

    compile('org.springframework.session:spring-session-core')
    compile('org.springframework.session:spring-session-data-redis')

    compile("de.codecentric:spring-boot-admin-starter-client:${springBootAdminVersion}")
    runtime('org.springframework.boot:spring-boot-devtools')
    compile("org.zalando:logbook-core:${logbookVersion}")
    compile("org.zalando:logbook-spring-boot-starter:${logbookVersion}")

    compile("com.google.guava:guava:${guavaVersion}")
    compile('org.flywaydb:flyway-core')
    compile("io.micrometer:micrometer-registry-prometheus:${micrometerVersion}")
    compile("io.springfox:springfox-swagger2:${springfoxVersion}")
    compile("io.springfox:springfox-swagger-ui:${springfoxVersion}")

    // Query DSL
    compile("com.querydsl:querydsl-core:${queryDslVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
    
    // code generation
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    compileOnly("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    runtime('com.h2database:h2')
    runtime("mysql:mysql-connector-java:${mysqlConnectorVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile("org.testcontainers:testcontainers:${testcontainersVersion}")

    testCompile "io.github.openfeign:feign-core:${feignVersion}"
    testCompile "io.github.openfeign:feign-jackson:${feignVersion}"
    testCompile "io.github.openfeign:feign-slf4j:${feignVersion}"
    testCompile "io.github.openfeign.form:feign-form:${feignFormVersion}"
    testCompile "com.brsanthu:migbase64:${migbase64Version}"
    testCompile "org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:${oltuVersion}"
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
    }
}

task wrapper(type: Wrapper) {
    // gradle 4.9 w/ lombok 1.8 produces error
    // https://github.com/rzwitserloot/lombok/issues/1716
    gradleVersion = '4.8.1'
}

/**
 * check: https://www.jhipster.tech/dependency-vulnerabities-check/
 */
if (project.hasProperty('strict-security')) {
    check.dependsOn dependencyCheckAnalyze
}
